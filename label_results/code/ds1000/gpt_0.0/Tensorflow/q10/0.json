{"trg_prediction": "max_len = 8\nbatch_size = len(lengths)\n\n# Create a tensor of shape (batch_size, max_len) filled with 1s\nmask = tf.ones((batch_size, max_len), dtype=tf.int32)\n\n# Create a range tensor of shape (max_len,) with values from 0 to max_len-1\nrange_tensor = tf.range(max_len, dtype=tf.int32)\n\n# Create a boolean mask of shape (batch_size, max_len) where True corresponds to indices less than the length\nbool_mask = tf.math.less(range_tensor, tf.expand_dims(lengths, axis=1))\n\n# Convert the boolean mask to integers (True -> 1, False -> 0)\nint_mask = tf.cast(bool_mask, dtype=tf.int32)\n\n# Invert the mask (1 -> 0, 0 -> 1)\ninv_mask = tf.math.subtract(1, int_mask)\n\n# Concatenate the inverted mask with the original mask along the second axis\nresult = tf.concat([inv_mask, int_mask], axis=1)\n"}