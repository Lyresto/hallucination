{"trg_prediction": "#!/usr/bin/env python3\n\ndef solve_linear(a, b, A):\n\tB = [a*A[0]]\n\tfor i in range(1, len(A)):\n\t\tB.append(a*A[i] + b*B[i-1])\n\treturn B\n\ndef solve_triangular(a, b, A):\n\tB = [a*A[0]]\n\ti = 1\n\tfor j in range(1, len(A)):\n\t\tB.append(a*A[i] + b*B[j-1])\n\t\ti += 1\n\treturn B\n\ndef solve_square(a, b, A):\n\tB = [a*A[0]]\n\ti = 1\n\tfor j in range(1, len(A)):\n\t\tB.append(a*A[i] + b*B[j-1])\n\t\ti += 1\n\treturn B\n\ndef solve_six(a, b, A):\n\tB = [a*A[0]]\n\ti = 1\n\tfor j in range(1, len(A)):\n\t\tB.append(a*A[i] + b*B[j-1])\n\t\ti += 1\n\treturn B\n\ndef solve_five(a, b, A):\n\tB = [a*A[0]]\n\ti = 1\n\tj = 1\n\tfor k in range(1, len(A)):\n\t\tB.append(a*A[i] + b*B[j-k])\n\t\ti += 1\n\t\tj += k\n\treturn B\n\ndef solve_five_square(a, b, A):\n\tB = [a*A[0]]\n\ti = 1\n\tj = 1\n\tk = 1\n\tfor l in range(1, len(A)):\n\t\tB.append(a*A[i] + b*B[j-k])\n\t\ti += 1\n\t\tj += k\n\t\tk = k+1\n\treturn B\n\ndef solve_nine(a, b, A):\n\tB = [a"}