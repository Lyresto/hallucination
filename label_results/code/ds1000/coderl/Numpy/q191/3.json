{"trg_prediction": "import numpy as np\n\ndef solve2(x, y):\n\tdef f(x):\n\t\treturn x * x + x ** 2\n\t\n\tdef hyp(x, y):\n\t\tres = f(x)\n\t\tfor i,v in enumerate(y):\n\t\t\tres = min(res, f(v) - v)\n\t\treturn res\n\t\n\tres = np.min(list(zip(y,x)), key=hyp, default=np.inf)\n\treturn [res[0], res[1], res[2]]\n\t\ndef solve3(x, y):\n\tdef f(x):\n\t\treturn x * x + x ** 2\n\t\n\tdef hyp(x, y):\n\t\tres = f(x)\n\t\tfor i,v in enumerate(y):\n\t\t\tres = min(res, f(v) - v)\n\t\treturn res\n\t\n\tres = np.min(list(zip(y,x)), key=hyp, default=np.inf)\n\treturn [res[0], res[1], res[2]]\n\t\ndef solve4(x, y):\n\tf = lambda x: x**2 + x * x + x ** 3\n\t\n\tdef h(x,y):\n\t\tres = f(x)\n\t\tfor i,v in enumerate(y):\n\t\t\tres = min(res, f(v) - v)\n\t\treturn res\n\t\n\tdef test():\n\t\tfor i in range(-100,1000):\n\t\t\tk = hyp(i,x)\n\t\t\tif k <= 0:\n\t\t\t\treturn False\n\t\treturn True\n\t\n\tif test():\n\t\treturn solve3(x,y)\n\telse:\n\t\treturn solve4(x,y)\n"}