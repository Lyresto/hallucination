{"trg_prediction": "import numpy as np\nimport pandas as pd\ndef get_term_frequency_inverse_data_frequency(documents):\n\tvectorizer = TfidfVectorizer()\n\tmatrix = vectorizer.fit_transform(documents)\n\treturn matrix\n\ndef get_tf_idf_query_similarity(documents, query):\n\ttfidf = get_term_frequency_inverse_data_frequency(documents)\n\tquery_matrix = tfidf.transform([query])\n\treturn query_matrix[:, 1:]\n\ndef cosine_similarities_of_queries(queries, documents):\n\tcosine_similarities = []\n\tfor query in queries:\n\t\tquery_matrix = get_tf_idf_query_similarity(documents, query)\n\t\tsimilarities = np.dot(query_matrix, query_matrix)\n\t\tcosine_similarities.append(similarities)\n\treturn np.array(cosine_similarities).T\n"}