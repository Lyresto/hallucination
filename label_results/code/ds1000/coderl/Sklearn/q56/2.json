{"trg_prediction": "def cosine_similarities_of_queries(queries, documents):\n\tvectors = get_term_frequency_inverse_data_frequency(documents)\n\tcosine_similarities_of_queries = []\n\tfor query in queries:\n\t\tsimilarities = []\n\t\tfor document in documents:\n\t\t\tif query in document:\n\t\t\t\tsimilarities.append(document.count(query) * 1.0 / (len(document) - document.count(query)))\n\t\tcosine_similarities_of_queries.append(similarities)\n\treturn pd.DataFrame(cosine_similarities_of_queries, index=queries)\n"}