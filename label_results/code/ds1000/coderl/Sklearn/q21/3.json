{"trg_prediction": "import xgboost.sklearn as xgb\nfrom xgboost.model_selection import TimeSeriesSplit\nfrom numpy import sum\n\n\ndef score(b, c, dp):\n\treturn sum(dp[i][j] for i, j in b) / sum(dp[i][j] for i, j in c)\n\n\ndef cross_validate(trainX, trainY, testX, testY, gridsearch):\n\tcv = TimeSeriesSplit(n_splits=len(trainX)).get_n_splits([trainX, trainY])\n\tn_jobs = len(cv)\n\tfor i, b in enumerate(gridsearch.grid_scores_):\n\t\ttestX_tmp = cv.transform([testX[i], testY[i]])\n\t\ttestY_tmp = cv.transform([testY[i], testY[i]])\n\t\tgridsearch.grid_scores_.append((score(b, c, testX_tmp), i))\n\t\tgridsearch.best_params_ = b\n\treturn gridsearch\n\n\ndef load_data():\n\ttrainX, trainY = np.array(trainX), np.array(trainY)\n\ttestX, testY = np.array(testX), np.array(testY)\n\tgridsearch = xgb.XGBRegressor()\n\tgridsearch.fit(trainX, trainY)\n\treturn gridsearch, testX, testY, trainX, trainY\n"}