{"trg_prediction": "import numpy as np\nimport pandas as pd\n\ndef predict_proba(X, y, x_predict):\n\treturn np.array([1 / (1 + np.exp(-X[i])) for i in range(len(X))]).T\n\ndef predict(X, y):\n\treturn np.array(y).reshape(len(y), 1)\n\ndef decision_function(X, y):\n\treturn np.array([predict(X, x) for x in X]).reshape(len(y), 1)\n\ndef fit_and_predict(X, y, x_predict):\n\tmodel = svm.LinearSVC(penalty='l1', C=1)\n\tmodel.fit(X, y)\n\treturn model.predict(x_predict)\n\ndef score_and_predict(X, y, x_predict):\n\tscores = model.decision_function(x_predict)\n\treturn np.array([scores[i] for i in range(len(y))]).T\n\t\ndef calibrate(X, y, x_predict):\n\tproba = predict_proba(X, y, x_predict)\n\treturn proba, model.predict(x_predict), model.decision_function(x_predict)\n"}