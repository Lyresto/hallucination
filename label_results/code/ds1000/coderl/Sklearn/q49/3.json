{"trg_prediction": "import numpy as np\nimport pandas\nimport sklearn.ensemble\n\n# Create training data\ndef train(X_train, y_train):\n\t# Set up encoder\n\tencoder = sklearn.ensemble.MultiLabelEncoder()\n\t# Convert training data to matrix\n\tX_train = encoder.fit_transform(X_train)\n\t# Split training data into test data\n\tX_test = encoder.transform(X_test)\n\t# Build classifier\n\tclf = GradientBoostingClassifier(max_depth=8, n_estimators=50)\n\t# Fit and predict on test data\n\tclf.fit(X_train, y_train)\n\t# Evaluate trained model\n\tpreds = clf.predict(X_test)\n\treturn preds\n\ndef load_data():\n\t# Get test data\n\ttest = pandas.DataFrame(pd.read_csv(\"test.csv\"))\n\t# Get train data\n\ttrain = pandas.DataFrame(pd.read_csv(\"train.csv\"))\n\t# Create encoder\n\tencoder = sklearn.ensemble.MultiLabelEncoder()\n\t# Convert test data to matrix\n\ttest[\"PassengerId\"] = test[\"PassengerId\"].map(lambda x: int(x) * 40)\n\t# Convert train data to matrix\n\ttrain[\"PassengerId\"] = train[\"PassengerId\"].map(lambda x: int(x) * 40)\n\treturn train, test\n"}