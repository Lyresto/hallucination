{"trg_prediction": "import numpy as np\nimport pandas as pd\nimport torch\n\ndef mask(mask_tensor):\n\treturn mask_tensor[0] == 1\n\ndef clean(clean_input_spectrogram):\n\treturn clean_input_spectrogram[0] * mask(clean_input_spectrogram[0]) + clean_input_spectrogram[0].cumsum()[::-1]\n\ndef save_data(mask, clean_input_spectrogram, output):\n\tnp_mask = np.ones((1, 400)).numpy() * mask\n\toutput[0].numpy() = clean(clean_input_spectrogram[0])\n\toutput[0].cumsum()[::-1] = clean(clean_input_spectrogram[0].cumsum())[::-1]\n\treturn output\n"}