{"trg_prediction": "import numpy as np\nimport pandas as pd\nimport torch\n\ndef split_tensors(a, chunk_dim, keep_dim_size=True):\n\tif len(a.shape) == 1:\n\t\treturn [a]\n\ta = a.contiguous().view(-1, chunk_dim**2)\n\ttensors = []\n\tfor i, d in enumerate(a):\n\t\ts = 0\n\t\tif keep_dim_size:\n\t\t\tif i % len(a.shape) == 0:\n\t\t\t\ts = a[i]\n\t\t\telse:\n\t\t\t\ts = a[:i].view(-1)\n\t\ttensors.append([s])\n\t\tif i >= len(a.shape) - 1:\n\t\t\tbreak\n\treturn tensors\n\ndef __starting_point():\n\ttensors = split_tensors(np.array([[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]), 10)\n\tprint(tensors)\n\n__starting_point()\n"}