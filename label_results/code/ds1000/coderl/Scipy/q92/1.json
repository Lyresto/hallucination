{"trg_prediction": "import numpy as np\nimport scipy.spatial\nimport pandas as pd\n\ndef distance_matrix(centroids, data):\n\tdistances = np.sqrt(np.sum(np.square(data - centroid) for centroid in centroids))\n\treturn distances\n\ndef closest_element(data, clusters, index):\n\treturn list(filter(lambda x: x[0] == index, clusters))[0][1]\n\ndef solve(data, clusters, result):\n\tdistances = distance_matrix(data, data)\n\tclusts = np.expand_dims(distances, axis=0)\n\tcluster_tree = scipy.cluster.hierarchy.cut_tree(clusts, distance=distances)\n\tclosest = [None]*len(clusters)\n\tfor i, cluster in enumerate(cluster_tree):\n\t\tclosest[i] = closest_element(data, cluster, i)\n\treturn closest\n"}