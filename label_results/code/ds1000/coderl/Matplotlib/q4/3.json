{"trg_prediction": "import numpy as np\n\ndef linear_line(x, y):\n\treturn np.poly1d(np.polyfit(x, y, 1))\n\ndef multi_line(x, y):\n\treturn np.polyfit(x, y, 2)\n\n# draw a line (with random y) for each different line style\nfig = plt.figure()\nfor _ in range(10):\n\tax = fig.add_subplot(1, 10, 1)\n\tp = multi_line(x, np.random.randn(10))\n\tfor i in range(10):\n\t\tax.plot(x, p(x), color='r', linewidth=2)\n\tax.plot(x, linear_line(x, y), color='b', linewidth=1)\n\tax.set_xlabel('x', size=10)\n\tax.set_ylabel('y', size=10)\n\t# draw a line (with random y) for each different line style\n\tax = fig.add_subplot(1, 10, 2)\n\tp = multi_line(x, np.random.randn(10))\n\tfor i in range(10):\n\t\tax.plot(x, p(x), color='g', linewidth=2)\n\tax.plot(x, linear_line(x, y), color='b', linewidth=1)\n\tax.set_xlabel('x', size=10)\n\tax.set_ylabel('y', size=10)\n\t# draw a line (with random y) for each different line style\n\tax = fig.add_subplot(1, 10, 3)\n\tp = multi_line(x, np.random.randn(10))\n\tfor i in range(10):\n\t\tax.plot(x, p(x), color='b', linewidth=2)\n\tax.plot(x, multi_line(x, y), color='g', linewidth=1)\n\tax.set_xlabel('x', size=10)\n\tax.set_ylabel('y', size=10)\n\t# draw a line (with random y) for each different line style\n\tax = fig.add_subplot(1, 10, 4)\n\tp ="}