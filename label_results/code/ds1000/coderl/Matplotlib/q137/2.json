{"trg_prediction": "def make_subplots(num, *args):\n\tif isinstance(args[0], (list, tuple, np.ndarray)):\n\t\treturn [make_subplots(*args[0])]\n\telse:\n\t\treturn make_subplots(*args)\n\ndef print_subplots(num, *args):\n\tfor i, plot in enumerate(make_subplots(args[0], *args[1:])):\n\t\tprint(plot.xaxis.get_label(), end=\"\")\n\tprint(\"\")\n\ndef axis_label(num):\n\tfor i, plot in enumerate(make_subplots(num, *args)):\n\t\tif len(plot.xaxis.get_label()) > 0:\n\t\t\treturn plot.xaxis.get_label()[0]\n\t\treturn \"x\"\n\ndef plot_line(a, b):\n\treturn plt.plot(a, b, \"r-\", label=\"line\")\n\ndef scatter_line(a, b):\n\treturn plt.plot(a, b, \"b-\", label=\"scatter\")\n\ndef diag(a, b):\n\treturn plt.plot(a, b, \"g-\", label=\"diag\")\n\ndef twinx(a, b):\n\treturn plt.twinx(a, b)\n\ndef trwinx(a, b):\n\treturn plt.trwinx(a, b)\n\ndef plot_both(a, b):\n\treturn plot_line(a, b)\n\treturn plot_line(b, a)\n\ndef plot_diag(a, b):\n\treturn plot_diag_line(a, b)\n\treturn plot_diag_line(b, a)\n\ndef plot_line_diag(a, b):\n\treturn plot_line(a, b, \"l-\", label=\"line diag\")\n\ndef plot_diag_line(a, b, l):\n\treturn plot_diag(a, b, \"r-\", l)\n\ndef get_test_data():\n\ta = np.arange(10).reshape(2, 5)\n\tb = np.arange(10).reshape(2, 5)\n\treturn a"}