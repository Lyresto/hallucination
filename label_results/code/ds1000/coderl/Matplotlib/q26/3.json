{"trg_prediction": "# SOLUTION END\n\n# create a grid with 1x1 lines and 1x1 points\ngrid = np.array([[0 for i in range(1+2*len(H))] for j in range(1+2*len(H))]).reshape(1,1,1)\n\nfor i in range(len(H)):\n\tfor j in range(len(H)):\n\t\tgrid[i,j] = grid[i][j]+H[i,j]\n\n# draw the grid\n# SOLUTION START\n# create a line for the first point and a line for the second point\n\nline = [(0,0),(0,1),(1,0),(1,1)]\nfor i in range(1,1+len(grid)):\n\tgrid[i][0] = line[0][0]\n\tgrid[i][1] = line[0][1]\n\nfor i in range(1,1+len(grid)):\n\tgrid[i][0] = line[1][0]\n\tgrid[i][1] = line[1][1]\n\n# draw the grid\n# SOLUTION END\n\n# create a matrix with rows and cols of grid\ngrid_matrix = np.array([[0 for i in range(1+2*len(H))] for j in range(1+2*len(H))]).reshape(1,1,1)\n\nfor i in range(len(H)):\n\tfor j in range(len(H)):\n\t\tgrid_matrix[i][j] = grid[i][j]+H[i,j]\n\n# draw the matrix\n# SOLUTION START\n# create a line for the first point and a line for the second point\n\nline = [(0,0),(0,1),(1,0),(1,1)]\nfor i in range(1,1+len(grid)):\n\tgrid_matrix[i][0] = line[0][0]\n\tgrid_matrix[i][1] = line[0][1]\n\nfor i in range(1,1+len(grid)):\n\tgrid_matrix[i][0] = line[1][0]"}