{"trg_prediction": "# SAVE AND PRACTICE: seaborn joint regression plot (kind='reg')\n# do not use scatterplot, use seaborn.joint_plot to make joint plot\n# SOLUTION END\n# SOLUTION START\n# make a seaborn joint reg plot (kind='reg') of 'total_bill' and 'tip' in the tips dataframe\n# do not use scatterplot, use seaborn.joint_plot to make joint plot\n# SOLUTION END\n# SOLUTION START\n# make a seaborn joint regression plot (kind='reg') of 'total_bill' and 'tip' in the tips dataframe\n# do not use scatterplot, use seaborn.joint_plot to make joint plot\n# SOLUTION END\n# SOLUTION START\n# make a seaborn joint regression plot (kind='reg') of 'total_bill' and 'tip' in the tips dataframe\n# do not use scatterplot, use seaborn.joint_plot to make joint plot\n# SOLUTION END\n# SOLUTION START\n# make a seaborn joint regression plot (kind='reg') of 'total_bill' and 'tip' in the tips dataframe\n# do not use scatterplot, use seaborn.joint_plot to make joint plot\n# SOLUTION END\n# SOLUTION START\n# make a seaborn joint regression plot (kind='reg') of 'total_bill' and 'tip' in the tips dataframe\n# do not use scatterplot, use seaborn.joint_plot to make joint plot\n# SOLUTION END\n\ndef regression_plot(x, y, kind='reg', x_label='total_bill', y_label='tip'):\n\t# use seaborn to make a regression plot\n\tp = sns.joint_plot(x, y, kind=kind, x_label=x_label, y_label=y_label)\n\tp.set(xlabel=x_label, ylabel=y_label)\n\tp.legend.get_frame().set_alpha(0.5)\n\treturn p\n"}