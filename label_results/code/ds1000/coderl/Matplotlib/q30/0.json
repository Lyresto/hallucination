{"trg_prediction": "from itertools import zip_longest\n\ndef downsample(arr, n):\n\tn = int(n)\n\tarr = list(arr)\n\ts = n // 2\n\ta = arr[:s] + arr[-s:]\n\tb = arr[:s]\n\treturn a, b\n\t\n\ndef plot(x, y):\n\tax = plt.gca()\n\tax.bar(x, y, width=1)\n\treturn ax.get_yaxis().get_majorticklines()[0]\n\ndef weighted_mean(df):\n\tw = 1.0 * len(df)\n\tdf.cumsum().cumsum().plot(kind='bar', ax=plt.gca())\n\treturn df.cumsum().cumsum() / w\n\ndf = pd.DataFrame({'x': x, 'y': y})\ndf = downsample(df['x'], n=10)\ndf = downsample(df['y'], n=10)\n# df = weighted_mean(df)\n\nans = plot(df['x'], df['y'])\nprint(ans)\n"}