{"trg_prediction": "import torch\n\ndef get_mask(lens):\n    max_len = max(lens) # get the maximum sentence length\n    mask = torch.zeros(len(lens), max_len) # create a tensor of zeros with size (batch_size, max_len)\n    for i, length in enumerate(lens): # iterate over each sentence length\n        mask[i, :length] = 1 # set the first 'length' elements in the i-th row to 1\n    return mask\n\n# example usage\nlens = [3, 5, 4]\nmask = get_mask(lens)\nprint(mask)\n"}