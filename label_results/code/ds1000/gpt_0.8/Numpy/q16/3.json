{"trg_prediction": "import numpy as np\n\ndef shift(arr, shifts):\n    result = np.empty_like(arr)\n    for i, shift in enumerate(shifts):\n        if shift > 0:\n            result[i] = np.concatenate((np.full(shift, np.nan), arr[i, :-shift]))\n        elif shift < 0:\n            result[i] = np.concatenate((arr[i, -shift:], np.full(-shift, np.nan)))\n        else:\n            result[i] = arr[i]\n    return result\n"}