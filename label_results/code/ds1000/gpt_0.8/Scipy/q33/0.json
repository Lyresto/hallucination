{"trg_prediction": "import numpy as np\nfrom scipy.ndimage import label, generate_binary_structure\n\n# Define a binary structure for labeling connected components\nstructure = generate_binary_structure(2, 2)\n\n# Label connected components in the image array\nlabeled_array, num_features = label(square > 0, structure)\n\n# Iterate over each connected component\nfor i in range(1, num_features + 1):\n    # Find the coordinates of the connected component\n    component_coords = np.argwhere(labeled_array == i)\n    \n    # Check if the connected component is completely surrounded by zeros\n    surrounded_by_zeros = True\n    for coord in component_coords:\n        x, y = coord\n        neighbors = labeled_array[x-1:x+2, y-1:y+2]\n        if np.any(neighbors != i):\n            surrounded_by_zeros = False\n            break\n    \n    # If the connected component is completely surrounded by zeros, set it to zero in the original array\n    if surrounded_by_zeros:\n        square[component_coords[:, 0], component_coords[:, 1]] = 0\n\nEND SOLUTION\n"}