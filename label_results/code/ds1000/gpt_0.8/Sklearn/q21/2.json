{"trg_prediction": "model = xgb.XGBRegressor()\nparamGrid = {\n    'n_estimators': [100, 200, 300],\n    'max_depth': [3, 4, 5],\n    'learning_rate': [0.1, 0.01, 0.001]\n}\nfit_params={\"early_stopping_rounds\":42,\n            \"eval_metric\" : \"mae\",\n            \"eval_set\" : [(testX, testY)]}\n\ngridsearch = GridSearchCV(estimator=model, param_grid=paramGrid, cv=TimeSeriesSplit(n_splits=3).get_n_splits([trainX, trainY]), n_jobs=-1)\ngridsearch.fit(trainX, trainY, **fit_params)\n\n# Get the best parameters and score\nbest_params = gridsearch.best_params_\nbest_score = gridsearch.best_score_\n\n# Fit the model with the best parameters\nbest_model = xgb.XGBRegressor(**best_params)\nbest_model.fit(trainX, trainY, **fit_params)\n\n# Get the predictions\npredictions = best_model.predict(testX)\n"}