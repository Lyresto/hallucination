{"trg_prediction": "softmax_output = torch.tensor(softmax_output)\nsoftmax_output = softmax_output.view(softmax_output.shape[0], -1)\nsoftmax_output = softmax_output.numpy()\nsoftmax_output = softmax_output.reshape(softmax_output.shape[0], 3)\nsoftmax_output = softmax_output.transpose()\nsoftmax_output = softmax_output.reshape(softmax_output.shape[0], 1)\nsoftmax_output = softmax_output.tolist()\nsoftmax_output = np.array(softmax_output)\nsoftmax_output = softmax_output.reshape(softmax_output.shape[0], 1)\nsoftmax_output = softmax_output.tolist()\nsoftmax_output = np.array(softmax_output)\nsoftmax_output = softmax_output.reshape(softmax_output.shape[0], 1)\nsoftmax_output = softmax_output.tolist()\nsoftmax_output = np.array(softmax_output)\nsoftmax_output = softmax_output.reshape(softmax_output.shape[0], 1)\nsoftmax_output = softmax_output.tolist()\nsoftmax_output = np.array(softmax_output)\nsoftmax_output = softmax_output.reshape(softmax_output.shape[0], 1)\nsoftmax_output = softmax_output.tolist()\nsoftmax_output = np.array(softmax_output)\nsoftmax_output = softmax_output.reshape(softmax_output.shape[0], 1)\nsoftmax_output = softmax_output.tolist()\nsoftmax_output = np.array(softmax_output)\nsoftmax_output = softmax_output.reshape(softmax_output.shape[0], 1)\nsoftmax_output = softmax_output.tolist()\nsoftmax_output = np.array(softmax_output)\nsoftmax_output = softmax_output.reshape(softmax_output.shape[0], 1)\nsoftmax_output = softmax_output.tolist()\nsoftmax_output = np.array(softmax_output)\nsoftmax_output = softmax_output.reshape(softmax_output.shape[0], 1)\nsoftmax_output = softmax_output.tolist()\nsoftmax_output = np.array(softmax_output)\nsoftmax_output = softmax_output.reshape(softmax_output.shape[0], 1)\nsoftmax_output = softmax_output.tolist()\nsoftmax_output = np.array(softmax_output)\nsoftmax_output = softmax_output.reshape(softmax_output.shape[0], 1)\nsoftmax_output = softmax_output.tolist()\nsoftmax_output = np.array(softmax_output)\nsoftmax_output = softmax_output.reshape(softmax_output.shape[0], 1)\nsoftmax_output = softmax_output.tolist()\nsoftmax_output = np.array(softmax_output)\nsoftmax_output"}