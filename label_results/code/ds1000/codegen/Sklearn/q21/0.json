{"trg_prediction": "\nimport numpy as np\nimport pandas as pd\nimport xgboost.sklearn as xgb\nfrom sklearn.model_selection import GridSearchCV\nfrom sklearn.model_selection import TimeSeriesSplit\ngridsearch, testX, testY, trainX, trainY = load_data()\nassert type(gridsearch) == sklearn.model_selection._search.GridSearchCV\nassert type(trainX) == list\nassert type(trainY) == list\nassert type(testX) == list\nassert type(testY) == list\nassert len(trainX) == len(trainY)\nassert len(testX) == len(testY)\nassert len(trainX) == len(trainY)\nassert len(testX) == len(testY)\nassert len(trainX) == len(trainY)\nassert len(testX) == len(testY)\nassert len(trainX) == len(trainY)\nassert len(testX) == len(testY)\nassert len(trainX) == len(trainY)\nassert len(testX) == len(testY)\nassert len(trainX) == len(trainY)\nassert len(testX) == len(testY)\nassert len(trainX) == len(trainY)\nassert len(testX) == len(testY)\nassert len(trainX) == len(trainY)\nassert len(testX) == len(testY)\nassert len(trainX) == len(trainY)\nassert len(testX) == len(testY)\nassert len(trainX) == len(trainY)\nassert len(testX) == len(testY)\nassert len(trainX) == len(trainY)\nassert len(testX) == len(testY)\nassert len(trainX) == len(trainY)\nassert len(testX) == len(testY)\nassert len(trainX) == len(trainY)\nassert len(testX) == len(testY)\nassert len(trainX) == len(trainY)\nassert len(testX) == len(testY)\nassert len(trainX) == len(trainY)\nassert len(testX) == len(testY)\nassert len(trainX) == len(trainY)\nassert len(testX) == len(testY)\nassert len(trainX)"}