
import numpy as np
import pandas as pd
import xgboost.sklearn as xgb
from sklearn.model_selection import GridSearchCV
from sklearn.model_selection import TimeSeriesSplit
gridsearch, testX, testY, trainX, trainY = load_data()
assert type(gridsearch) == sklearn.model_selection._search.GridSearchCV
assert type(trainX) == list
assert type(trainY) == list
assert type(testX) == list
assert type(testY) == list
assert len(trainX) == len(trainY)
assert len(testX) == len(testY)
assert len(trainX) == len(trainY)
assert len(testX) == len(testY)
assert len(trainX) == len(trainY)
assert len(testX) == len(testY)
assert len(trainX) == len(trainY)
assert len(testX) == len(testY)
assert len(trainX) == len(trainY)
assert len(testX) == len(testY)
assert len(trainX) == len(trainY)
assert len(testX) == len(testY)
assert len(trainX) == len(trainY)
assert len(testX) == len(testY)
assert len(trainX) == len(trainY)
assert len(testX) == len(testY)
assert len(trainX) == len(trainY)
assert len(testX) == len(testY)
assert len(trainX) == len(trainY)
assert len(testX) == len(testY)
assert len(trainX) == len(trainY)
assert len(testX) == len(testY)
assert len(trainX) == len(trainY)
assert len(testX) == len(testY)
assert len(trainX) == len(trainY)
assert len(testX) == len(testY)
assert len(trainX) == len(trainY)
assert len(testX) == len(testY)
assert len(trainX) == len(trainY)
assert len(testX) == len(testY)
assert len(trainX) == len(trainY)
assert len(testX) == len(testY)
assert len(trainX)