{"trg_prediction": "\n    result = ndimage.gaussian_filter(img.astype(np.double), (30, 30))\n    result -= result.min()\n    result /= result.max()\n    result = result.astype(np.int)\n    result = result.sum(axis=0)\n    result = result.sum(axis=1)\n    result = result.sum(axis=2)\n    result = result.sum(axis=3)\n    result = result.sum(axis=4)\n    result = result.sum(axis=5)\n    result = result.sum(axis=6)\n    result = result.sum(axis=7)\n    result = result.sum(axis=8)\n    result = result.sum(axis=9)\n    result = result.sum(axis=10)\n    result = result.sum(axis=11)\n    result = result.sum(axis=12)\n    result = result.sum(axis=13)\n    result = result.sum(axis=14)\n    result = result.sum(axis=15)\n    result = result.sum(axis=16)\n    result = result.sum(axis=17)\n    result = result.sum(axis=18)\n    result = result.sum(axis=19)\n    result = result.sum(axis=20)\n    result = result.sum(axis=21)\n    result = result.sum(axis=22)\n    result = result.sum(axis=23)\n    result = result.sum(axis=24)\n    result = result.sum(axis=25)\n    result = result.sum(axis=26)\n    result = result.sum(axis=27)\n    result = result.sum(axis=28)\n    result = result.sum(axis=29)\n    result = result.sum(axis=30)\n    result = result.sum(axis=31)\n    result = result.sum(axis=32)\n    result = result.sum(axis=33)\n    result = result.sum(axis=34)\n    result = result.sum(axis=35)\n    result = result.sum(axis=36)\n    result = result.sum(axis=37)\n    result = result.sum(axis=38)\n    result = result.sum(axis=39)\n    result = result.sum(axis=40)\n    result = result.sum(axis=41)\n    result = result.sum(axis=42)\n    result = result.sum(axis=43)\n    result = result.sum(axis=44)\n    result = result.sum(axis=45)\n    result = result.sum(axis=46)\n    result = result.sum(axis=47)\n"}