{"trg_prediction": "# Define the XGBoost model\nmodel = xgb.XGBRegressor()\n\n# Define the parameter grid to search\nparam_grid = {\n    'max_depth': [3, 4, 5],\n    'learning_rate': [0.1, 0.01, 0.001],\n    'n_estimators': [100, 500, 1000]\n}\n\n# Define the fit parameters for early stopping\nfit_params = {\n    'early_stopping_rounds': 10,\n    'eval_metric': 'mae',\n    'eval_set': [(testX, testY)]\n}\n\n# Perform grid search with early stopping\ngridsearch = GridSearchCV(model, param_grid, cv=TimeSeriesSplit(n_splits=3).get_n_splits([trainX, trainY]), \n                          n_jobs=-1, verbose=1, fit_params=fit_params)\ngridsearch.fit(trainX, trainY)\n\n# Get the best hyperparameters and score\nbest_params = gridsearch.best_params_\nb = gridsearch.best_score_\n\n# Make predictions with the best model\nbest_model = xgb.XGBRegressor(**best_params)\nbest_model.fit(trainX, trainY, early_stopping_rounds=10, eval_metric='mae', eval_set=[(testX, testY)])\nc = best_model.predict(testX)\n"}